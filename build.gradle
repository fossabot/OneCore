/*
* WCore
* Copyright (C) 2021 EthanLibs And W-OVERFLOW
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published
* by the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

plugins {
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "com.github.gmazzo.buildconfig" version "3.0.1"
    id "org.jetbrains.kotlin.jvm" version "1.6.0"
    id "maven-publish"
    id "java"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

allprojects {
    apply plugin: "com.github.johnrengelman.shadow"
    apply plugin: "com.github.gmazzo.buildconfig"
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "maven-publish"
    apply plugin: "java"

    version = project_ver

    group = project_group

    configurations {
        compile
        api.extendsFrom(compile)

        shade
        implementation.extendsFrom(shade)
    }

    repositories {
        mavenCentral()
        maven {
            url = "https://repo.sk1er.club/repository/maven-public/"
        }
        maven {
            url = "https://repo.spongepowered.org/maven/"
        }
        maven {
            url = "https://jitpack.io/"
        }
        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.terraformersmc.com/releases/" }
    }

    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        from {
            'LICENSE'
        }

        exclude 'META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'module-info.class'
    }

    shadowJar {
        archiveClassifier.set('')
        configurations = [project.configurations.shade]
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        exclude('LICENSE.md')
        exclude('pack.mcmeta')
        exclude('dummyThing')
        exclude('**/module-info.class')
        exclude('*.so')
        exclude('*.dylib')
        exclude('*.dll')
        exclude('*.jnilib')
        exclude('ibxm/**')
        exclude('com/jcraft/**')
        exclude('org/lwjgl/**')
        exclude('net/java/**')

        exclude('META-INF/proguard/**')
        exclude('META-INF/maven/**')
        exclude('META-INF/versions/**')
        exclude('META-INF/com.android.tools/**')

        exclude('**/*.kotlin_metadata')
        exclude('**/*.kotlin_module')
        exclude('**/*.kotlin_builtins')
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "${project_name}-${project.name}"

                artifact(shadowJar) {
                    builtBy shadowJar
                }

                pom {
                    name = "${project_name}-${project.name}"
                }
            }
        }
    }

    jar.finalizedBy(shadowJar)
}